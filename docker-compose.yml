services:
  # ──────────────────────────────────────────── database ──
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: finance
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always

  # ──────────────────────────────────────────── backend ──
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/finance
    ports:
      - "8878:8878"
    restart: always
    # ✓ valid YAML flow list – one line, commas inside the []
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8878/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8878"
    depends_on:
      - db

  # ───────── production bundle (enable with --profile prod) ─────────
  frontend:
    profiles: ["prod"]
    build: ./frontend
    depends_on:
      - backend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # ──────────────────────────────────────────── traefik ──
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8877"
    ports:
      - "8877:8877"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # let Traefik come up no matter what
    depends_on: []

volumes:
  db-data:
